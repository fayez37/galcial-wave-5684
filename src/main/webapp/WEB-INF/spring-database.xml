<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- <bean class="java.net.URI" id="dbUrl">
    	<constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
	</bean> -->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
 		<!-- <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
    	<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
    	<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/> -->

    	<property name="url" value="jdbc:postgresql://ec2-54-197-247-170.compute-1.amazonaws.com:5432/d44kljm3q57lg9?ssl=true&amp;sslfactory=org.postgresql.ssl.NonValidatingFactory"/>
    	<property name="username" value="ircyvrigryydlc"/>
    	<property name="password" value="q54AUMPoYM8TspvXRci1Upl1Ql"/>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>orm/Employee.hbm.xml</value>
				<value>orm/EmployeeRole.hbm.xml</value>
				<value>orm/Ticket.hbm.xml</value>
				<value>orm/Comments.hbm.xml</value>
				<value>orm/Customer.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="employeeDao" class="com.redmart.employee.dao.EmployeeDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="customerDao" class="com.redmart.customer.dao.CustomerDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="ticketDao" class="com.redmart.tickets.dao.TicketDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="employeeDetailsService" class="com.redmart.employee.service.EmployeeDetailsService">
		<property name="employeeDao" ref="employeeDao" />
	</bean>
	
	<bean id="employeeService" class="com.redmart.employee.service.EmployeeService">
		<property name="employeeDao" ref="employeeDao" />
	</bean>
	<bean id="customerService" class="com.redmart.customer.service.CutomerService">
		<property name="customerDao" ref="customerDao" />
	</bean>
	<bean id="ticketService" class="com.redmart.tickets.service.TicketService">
		<property name="ticketDao" ref="ticketDao" />
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="allService"
			expression="execution(* com.redmart.*.service.*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allService" />
	</aop:config>
</beans>